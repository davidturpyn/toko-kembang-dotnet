using JualBeli_LIB;
using MySql.Data.MySqlClient;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Transactions;

public class NotaBeli
{
	public virtual string NoNotaBeli
	{
		get;
		set;
	}

	public virtual DateTime Tanggal
	{
		get;
		set;
	}

	public virtual List<NotaBeliDetil> NotaBeliDetil
	{
		get;
		set;
	}

	public virtual Pegawai Pegawai
	{
		get;
		set;
	}

	public virtual Supplier Supplier
	{
		get;
		set;
	}

    public NotaBeli()
    {
        NoNotaBeli = "";
        Tanggal = DateTime.Now;
        NotaBeliDetil = new List<NotaBeliDetil>();
        Pegawai = new Pegawai();
        Supplier = new Supplier();
    }
    public NotaBeli(string pNota, DateTime pTanggal, Pegawai pPegawwai, Supplier pSupplier)
    {
        NoNotaBeli = pNota;
        Tanggal = pTanggal;
        Pegawai = pPegawwai;
        Supplier = pSupplier;
        NotaBeliDetil = new List<NotaBeliDetil>();
    }

    #region Methode
    public void TambahDetilBarang(long harga, int jumlah, Barang pBarang)
    {
        NotaBeliDetil nbd = new NotaBeliDetil(harga, jumlah, pBarang);
        NotaBeliDetil.Add(nbd);
    }

    public static string TambahData(NotaBeli pNotaBeli)
    {
        using (var transcope = new TransactionScope(TransactionScopeOption.RequiresNew))
        {
            string sql = "insert into NotaBeli(NoNota,Tanggal,KodeSupplier,KodePegawai) values ('" + pNotaBeli.NoNotaBeli + "','" + pNotaBeli.Tanggal.ToString("yyyy-MM-dd hh:mm:ss") + "','" + pNotaBeli.Supplier.KodeSupplier + "','" + pNotaBeli.Pegawai.KodePegawai + "');";
            
            try
            {
                Koneksi.DML(sql);

                for (int i = 0; i < pNotaBeli.NotaBeliDetil.Count; i++)
                {
                    string sql2 = "insert into NotaBeliDetil(NoNota,KodeBarang,Harga,Jumlah) VALUES ('" + pNotaBeli.NoNotaBeli + "','" + pNotaBeli.NotaBeliDetil[i].Barang.KodeBarang + "','" + pNotaBeli.NotaBeliDetil[i].Harga + "','" + pNotaBeli.NotaBeliDetil[i].Jumlah + "');";
                    Koneksi.DML(sql2);
                    string hasilUpdate = Barang.UbahStokTerbeli(pNotaBeli.NotaBeliDetil[i].Barang.KodeBarang, pNotaBeli.NotaBeliDetil[i].Jumlah);
                }

                transcope.Complete();

                return "1";
            }
            catch (Exception e)
            {
                transcope.Dispose();
                return e.Message;
            }
        }
    }

    public static string GenerateNoNota(out string pHasilNota)
    {
        string sql = "select substr(NoNota,9,3) as noUrutTransaksi from NotaBeli where date(Tanggal) = date(CURRENT_DATE) order by NoNota desc limit 1";
       
        pHasilNota = "";
        
        try
        {
            MySqlDataReader hasilData = Koneksi.jalankanPerintahQuery(sql);

            string noUrutTransTerbaru = "";

            if (hasilData.Read() == true)
            {
                int noUrutTrans = int.Parse(hasilData.GetValue(0).ToString()) + 1;
                noUrutTransTerbaru = noUrutTrans.ToString().PadLeft(3, '0');
            }
            else
            {
                noUrutTransTerbaru = "001";
            }

            string tahun = DateTime.Now.Year.ToString();
            string bulan = DateTime.Now.Month.ToString().PadLeft(2, '0');
            string tanggal = DateTime.Now.Day.ToString().PadLeft(2, '0');
            pHasilNota = tahun + bulan + tanggal + noUrutTransTerbaru.ToString();

            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + " perintah sql " + sql;
        }
    }

    public static string BacaData(string pKriteria, string pNilaiKriteria, List<NotaBeli> listhasildata)
    {
        string sql1 = "";

        if (pKriteria == "")
        {
            sql1 = "select nb.NoNota, nb.Tanggal, nb.KodeSupplier, s.Nama, s.Alamat, nb.KodePegawai, p.Nama from notabeli nb inner join supplier s on nb.KodeSupplier = s.KodeSupplier inner join pegawai p on nb.KodePegawai = p.KodePegawai order by nb.NoNota desc;";
        }
        else
        {
            sql1 = "select nb.NoNota, nb.Tanggal, nb.KodeSupplier, s.Nama, s.Alamat, nb.KodePegawai, p.Nama from notabeli nb inner join supplier s on nb.KodeSupplier = s.KodeSupplier inner join pegawai p on nb.KodePegawai = p.KodePegawai where " + pKriteria + " LIKE '%" + pNilaiKriteria + "%' order by nb.NoNota desc;";
        }

        try
        {
            MySqlDataReader hasildata1 = Koneksi.jalankanPerintahQuery(sql1);
            listhasildata.Clear();

            while (hasildata1.Read() == true)
            {
                Supplier supplier = new Supplier();
                supplier.KodeSupplier = int.Parse(hasildata1.GetValue(2).ToString());
                supplier.Nama = hasildata1.GetValue(3).ToString();
                supplier.Alamat = hasildata1.GetValue(4).ToString();

                Pegawai pegawai = new Pegawai();
                pegawai.KodePegawai = int.Parse(hasildata1.GetValue(5).ToString());
                pegawai.Nama = hasildata1.GetValue(6).ToString();

                NotaBeli nota = new NotaBeli(hasildata1.GetValue(0).ToString(), DateTime.Parse(hasildata1.GetValue(1).ToString()), pegawai, supplier);

                string sql2 = "select nbd.KodeBarang, b.Nama, nbd.Harga, nbd.Jumlah from notabeli nb inner join notabelidetil nbd on nb.NoNota = nbd.NoNota inner join barang b on nbd.KodeBarang = b.KodeBarang Where nbd.NoNota like '%" + hasildata1.GetValue(0).ToString() + "%';";

                MySqlDataReader hasilData2 = Koneksi.jalankanPerintahQuery(sql2);

                while (hasilData2.Read() == true)
                {
                    Barang brg = new Barang();
                    brg.KodeBarang = hasilData2.GetValue(0).ToString();
                    brg.Nama = hasilData2.GetValue(1).ToString();

                    NotaBeliDetil detil = new NotaBeliDetil(int.Parse(hasilData2.GetValue(2).ToString()), int.Parse(hasilData2.GetValue(3).ToString()), brg);
                    nota.NotaBeliDetil.Add(detil);
                }

                listhasildata.Add(nota);
            }

            return "1";
        }
        catch (Exception ex)
        {
            return ex.Message;
        }
    }

    public static string CetakNota(string pKriteria, string pNilaiKriteria, string pNamaFile)
    {
        try
        {
            List<NotaBeli> listNotaBeli = new List<NotaBeli>();

            string hasilBaca = NotaBeli.BacaData(pKriteria, pNilaiKriteria, listNotaBeli);

            if (hasilBaca == "1" && listNotaBeli.Count > 0)
            {
                StreamWriter file = new StreamWriter(pNamaFile);

                for (int i = 0; i < listNotaBeli.Count; i++)
                {
                    file.WriteLine("");
                    file.WriteLine("TOKO KEMBANG BORONG");
                    file.WriteLine("Jl. Jendral Sudirman");
                    file.WriteLine("Telp. (081) - 333262200");
                    file.WriteLine("=".PadRight(50, '='));

                    file.WriteLine("No.Nota : " + listNotaBeli[i].NoNotaBeli);
                    file.WriteLine("Tanggal : " + listNotaBeli[i].Tanggal);
                    file.WriteLine("");
                    file.WriteLine("Supplier : " + listNotaBeli[i].Supplier.Nama);
                    file.WriteLine("Alamat : " + listNotaBeli[i].Supplier.Alamat);
                    file.WriteLine("");
                    file.WriteLine("kasir : " + listNotaBeli[i].Pegawai.Nama);
                    file.WriteLine("=".PadRight(50, '='));

                    int grandTotal = 0;
                    for (int j = 0; j < listNotaBeli[i].NotaBeliDetil.Count; j++)
                    {
                        string nama = listNotaBeli[i].NotaBeliDetil[j].Barang.Nama;

                        if (nama.Length > 30)
                        {
                            nama = nama.Substring(0, 30);
                        }

                        int jumlah = listNotaBeli[i].NotaBeliDetil[j].Jumlah;
                        int harga = (int)listNotaBeli[i].NotaBeliDetil[j].Harga;
                        int subtotal = jumlah * harga;

                        file.Write(nama.PadRight(30, ' '));
                        file.Write(jumlah.ToString().PadRight(3, ' '));
                        file.Write(harga.ToString("0,###").PadLeft(7, ' '));
                        file.Write(subtotal.ToString("0,###").PadLeft(10, ' '));
                        file.WriteLine("");
                        grandTotal = grandTotal + jumlah * harga;
                    }
                    file.WriteLine("=".PadRight(50, '='));
                    file.WriteLine("TOTAL : " + grandTotal.ToString("0,###"));
                    file.WriteLine("=".PadRight(50, '='));
                    file.WriteLine("Sistem telah mencatat pengeluaran");
                    file.WriteLine("");
                }
                file.Close();

                Cetak c = new Cetak(pNamaFile, "Courier New", 9, 10, 10, 10, 10);
                string s = c.CetakKePrinter("tulisan");

                if (s != "1")
                {
                    return s;
                }

                return "1";
            }
            else
            {
                return "error";
            }
        }
        catch (MySqlException e)
        {
            return e.Message;
        }
    }
    #endregion
}


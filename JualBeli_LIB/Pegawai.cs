using JualBeli_LIB;
using MySql.Data.MySqlClient;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Pegawai
{
    public Pegawai()
    {
        KodePegawai = 0;
    }

    public Pegawai(int kodePegawai, string nama, string username, string password, DateTime tglLahir, string alamat, int gaji, Jabatan jabatan)
    {
        KodePegawai = kodePegawai;
        Nama = nama;
        Username = username;
        Password = password;
        TglLahir = tglLahir;
        Alamat = alamat; 
        Gaji = gaji;
        Jabatan = jabatan;
    }

	public virtual int KodePegawai
	{
		get;
		set;
	}

	public virtual string Nama
	{
		get;
		set;
	}

	public virtual string Username
	{
		get;
		set;
	}

	public virtual string Password
	{
		get;
		set;
	}

	public virtual DateTime TglLahir
	{
		get;
		set;
	}

	public virtual string Alamat
	{
		get;
		set;
	}

	public virtual int Gaji
	{
		get;
		set;
	}

	public virtual Jabatan Jabatan
	{
		get;
		set;
    }

    #region Methode
    public static string TambahPegawai(Pegawai kat)
    {
        string sql = "insert into pegawai values ('" + kat.KodePegawai + "','" + kat.Nama + "','" + kat.TglLahir.ToString("yyyy-MM-dd") + "','" + kat.Alamat + "'," + kat.Gaji + ",'" + kat.Username + "','" + kat.Password + "','" + kat.Jabatan.IdJabatan + "');";

        try
        {
            string rest = Pegawai.BuatUserBaru(kat, Koneksi.GetNamaServer());

            if (rest == "1")
            {
                string hasilHakAkses = Pegawai.BeriHakAkses(kat, Koneksi.GetNamaServer(), Koneksi.GetNamaDataBase());
                if (hasilHakAkses == "1")
                {
                    Koneksi.DML(sql);
                    return "1";
                }
                else
                {
                    return "HAK AKSES Gagal Membuat User baru. Pesan Kesalahan : " + hasilHakAkses;
                }
            }
            else
            {
                return "BUAT USER Gagal Membuat User baru. Pesan Kesalahan : " + rest;
            }
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". perintah sql : " + sql;
        }
    }

    public static string UbahPegawai(Pegawai p)
    {
        string sql = "update pegawai set Nama='" + p.Nama + "', TglLahir='" + p.TglLahir.ToString("yyyy-MM-dd") + "', Alamat='" + p.Alamat + "', Gaji=" + p.Gaji + ", Password='" + p.Password + "', IdJabatan='" + p.Jabatan.IdJabatan + "' where KodePegawai=" + p.KodePegawai + ";";

        try
        {
            string hasilUbah = UbahPasswordUser(p, Koneksi.GetNamaServer());

            if (hasilUbah == "1")
            {
                Koneksi.DML(sql);
                return "1";
            }
            else
            {
                return "UBAH USER Gagal Mengubah Password User. Pesan Kesalahan : " + hasilUbah;
            }
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". perintah sql : " + sql;
        }
    }

    public static string HapusPegawai(Pegawai p)
    {
        string sql = "delete from pegawai where KodePegawai = " + p.KodePegawai + ";";

        try
        {
            string hasilHapus = HapusUser(p.Username, Koneksi.GetNamaServer());

            if (hasilHapus == "1")
            {
                Koneksi.DML(sql);
                return "1";
            }
            else
            {
                return "HAPUS USER Gagal Menghapus User. Pesan Kesalahan : " + hasilHapus;
            }
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". perintah sql : " + sql;
        }
    }

    public static string GenerateKode(out string hasilKode)
    {
        string sql = "select max(KodePegawai) from pegawai;";
        hasilKode = "";

        try
        {
            MySqlDataReader hasil = Koneksi.jalankanPerintahQuery(sql);

            if (hasil.Read() == true)
            {
                int kodeTerbaru = int.Parse(hasil.GetValue(0).ToString()) + 1;

                hasilKode = kodeTerbaru.ToString();
            }
            else
            {
                hasilKode = "1";
            }

            return "1";
        }
        catch (Exception e)
        {
            return e.Message;
        }
    }

    public static string BacaData(string kriteria, string nilaiKriteria, List<Pegawai> listDataPegawai)
    {
        string sql = "";

        if (kriteria == "")
        {
            sql = "select p.KodePegawai,p.Nama,p.TglLahir,p.Alamat,p.Gaji,p.Username,p.IdJabatan,j.Nama, p.Password from pegawai p inner join jabatan j on p.IdJabatan = j.IdJabatan;";
        }
        else
        {
            sql = "select p.KodePegawai,p.Nama,p.TglLahir,p.Alamat,p.Gaji,p.Username,p.IdJabatan,j.Nama, p.Password from pegawai p inner join jabatan j on p.IdJabatan = j.IdJabatan where " + kriteria + " like '%" + nilaiKriteria + "%';";
        }

        try
        {
            MySqlDataReader hasil = Koneksi.jalankanPerintahQuery(sql);

            while (hasil.Read() == true)
            {
                Pegawai kt = new Pegawai();
                kt.KodePegawai = int.Parse(hasil.GetValue(0).ToString());
                kt.Nama = hasil.GetValue(1).ToString();
                kt.TglLahir = DateTime.Parse(hasil.GetValue(2).ToString());
                kt.Alamat = hasil.GetValue(3).ToString();
                kt.Gaji = int.Parse(hasil.GetValue(4).ToString());
                kt.Username = hasil.GetValue(5).ToString();
                kt.Password = hasil.GetValue(8).ToString();

                Jabatan j = new Jabatan(hasil.GetValue(6).ToString(), hasil.GetValue(7).ToString());
                kt.Jabatan = j;

                listDataPegawai.Add(kt);
            }

            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message;
        }
    }

    public static string BuatUserBaru(Pegawai p, string namaServer)
    {
        string sql = "create user '" + p.Username + "'@'" + namaServer + "' identified by '" + p.Password + "'";
        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". Perintah sql : " + sql;
        }
    }

    public static string BeriHakAkses(Pegawai p, string namaServer, string namaDataBase)
    {
        string sql = "grant all privileges on " + namaDataBase + ".* to '" + p.Username + "'@'" + namaServer + "'";
        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". Perintah sql : " + sql;
        }
    }

    public static string UbahPasswordUser(Pegawai p, string namaServer)
    {
        string sql = "SET PASSWORD FOR '" + p.Username + "'@'" + namaServer + "'=PASSWORD('" + p.Password + "');";
        
        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". Perintah sql : " + sql;
        }
    }

    public static string HapusUser(string p, string namaServer)
    {
        string sql = "DROP USER '" + p + "'@'" + namaServer + "';";

        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". Perintah sql : " + sql;
        }
    }
    #endregion
}


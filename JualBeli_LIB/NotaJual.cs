using JualBeli_LIB;
using MySql.Data.MySqlClient;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Transactions;

public class NotaJual
{
	public virtual string NoNotaJual
	{
		get;
		set;
	}

	public virtual DateTime Tanggal
	{
		get;
		set;
	}


	public virtual List<NotaJualDetil> NotaJualDetil
	{
		get;
		set;
	}

	public virtual Pegawai Pegawai
	{
		get;
		set;
    }
    public virtual Barang Barang
    {
        get;
        set;
    }

    #region Constructor
    public NotaJual()
    {
        Tanggal = DateTime.Now;
        NotaJualDetil = new List<NotaJualDetil>();
    }

    public NotaJual(string _NoNotaJual, DateTime _Tanggal, Pegawai _Pegawai)
    {
        NoNotaJual = _NoNotaJual;
        Tanggal = _Tanggal;
        
        Pegawai = _Pegawai;
        NotaJualDetil = new List<NotaJualDetil>();
    }
    #endregion

    #region Methode
    public static string GenerateNoNota(out string _HasilNota)
    {
        string sql = "select substr(NoNota,9,3) from NotaJual where date(Tanggal) = date(CURRENT_DATE) order by NoNota desc limit 1;";
        _HasilNota = "";
        try
        {
            MySqlDataReader hasilData = Koneksi.jalankanPerintahQuery(sql);
            string noTerbaru = "";
            if (hasilData.Read() == true)
            {
                int noUrutTrans = int.Parse(hasilData.GetValue(0).ToString()) + 1;
                noTerbaru = noUrutTrans.ToString().PadLeft(3, '0');
            }
            else
            {
                noTerbaru = "001";
            }
            string tahun = DateTime.Now.Year.ToString();
            string bulan = DateTime.Now.Month.ToString().PadLeft(2, '0');
            string tanggal = DateTime.Now.Day.ToString().PadLeft(2, '0');
            _HasilNota = tahun + bulan + tanggal + noTerbaru.ToString();
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + " perintah sql " + sql;
        }
    }
    public void TambahDetilBarang(Barang _Barang, int _Harga, int _Jumlah)
    {
        NotaJualDetil njd = new NotaJualDetil(_Barang, _Harga, _Jumlah);
        NotaJualDetil.Add(njd);
    }
    public static string TambahData(NotaJual _NotaJual)
    {
        using (var transcope = new TransactionScope(TransactionScopeOption.RequiresNew))
        {
            string sql = "insert into notajual values ('" + _NotaJual.NoNotaJual + "','" + _NotaJual.Tanggal.ToString("yyyy-MM-dd hh:mm:ss") + "'," + _NotaJual.Pegawai.KodePegawai + ");";

            try
            {
                Koneksi.DML(sql);

                for (int i = 0; i < _NotaJual.NotaJualDetil.Count; i++)
                {
                    string sql2 = "insert into notajualdetil values('" + _NotaJual.NoNotaJual + "','" + _NotaJual.NotaJualDetil[i].Barang.KodeBarang + "','" + _NotaJual.NotaJualDetil[i].Harga + "','" + _NotaJual.NotaJualDetil[i].Jumlah + "');";
                    Koneksi.DML(sql2);
                    string hasilUpdateBarang = Barang.UbahStokTerjual(_NotaJual.NotaJualDetil[i].Barang.KodeBarang, _NotaJual.NotaJualDetil[i].Jumlah);
                }

                transcope.Complete();
                return "1";

            }catch(Exception ex){
                return ex.Message;
            }
        }
    }

    public static string BacaData(string pKriteria, string pNilaiKriteria, List<NotaJual> listhasildata)
    {
        string sql1 = "";

        if (pKriteria == "")
        {
            sql1 = "SELECT njd.NoNota,nj.Tanggal,njd.KodeBarang,b.Nama,njd.Harga,njd.Jumlah,(select p.Nama from notajual as n inner join pegawai as p on n.KodePegawai = p.KodePegawai WHERE n.NoNota = njd.NoNota) as namapegawai FROM notajualdetil as njd inner join notajual as nj on njd.NoNota = nj.NoNota inner join barang as b on njd.KodeBarang = b.KodeBarang Order by njd.NoNota DESC; ";
        }
        else
        {
            sql1 = "SELECT njd.NoNota,nj.Tanggal,njd.KodeBarang,b.Nama,njd.Harga,njd.Jumlah,(select p.Nama from notajual as n inner join pegawai as p on n.KodePegawai = p.KodePegawai WHERE n.NoNota = njd.NoNota) as namapegawai FROM notajualdetil as njd inner join notajual as nj on njd.NoNota = nj.NoNota inner join barang as b on njd.KodeBarang = b.KodeBarang where " + pKriteria + " LIKE '%" + pNilaiKriteria + "%' Order by njd.NoNota DESC; ";
        }


        try
        {
            MySqlDataReader hasildata1 = Koneksi.jalankanPerintahQuery(sql1);
            listhasildata.Clear();

            while (hasildata1.Read() == true)
            {

                Pegawai peg = new Pegawai();
                peg.Nama = hasildata1.GetValue(6).ToString();


                Barang b = new Barang();
                b.KodeBarang = hasildata1.GetValue(2).ToString();
                b.Nama = hasildata1.GetValue(3).ToString();

                NotaJual nota = new NotaJual(hasildata1.GetValue(0).ToString(), DateTime.Parse(hasildata1.GetValue(1).ToString()), peg);
                NotaJualDetil detil = new NotaJualDetil(b, int.Parse(hasildata1.GetValue(4).ToString()), int.Parse(hasildata1.GetValue(5).ToString()));

                nota.NotaJualDetil.Add(detil);
                listhasildata.Add(nota);
            }

            return "1";
        }
        catch (Exception e)
        {
            return e.Message;
        }
    }

    public static string CetakNota(string pKriteria, string pNilaiKriteria, string pNamaFile)
    {
        try
        {
            List<NotaJual> listNotaJual = new List<NotaJual>();

            string hasilBaca = NotaJual.BacaData(pKriteria, pNilaiKriteria, listNotaJual);

            if (hasilBaca == "1" && listNotaJual.Count > 0)
            {
                StreamWriter file = new StreamWriter(pNamaFile);

                for (int i = 0; i < listNotaJual.Count; i++)
                {
                    file.WriteLine("");
                    file.WriteLine("TOKO KEMBANG BORONG");
                    file.WriteLine("Jl. Jendral Sudirman");
                    file.WriteLine("Telp. (081) - 333262200");
                    file.WriteLine("=".PadRight(50, '='));

                    file.WriteLine("No.Nota : " + listNotaJual[i].NoNotaJual);
                    file.WriteLine("Tanggal : " + listNotaJual[i].Tanggal);
                    file.WriteLine("");
                    file.WriteLine("kasir : " + listNotaJual[i].Pegawai.Nama);
                    file.WriteLine("=".PadRight(50, '='));

                    int grandTotal = 0;
                    for (int j = 0; j < listNotaJual[i].NotaJualDetil.Count; j++)
                    {
                        string nama = listNotaJual[i].NotaJualDetil[j].Barang.Nama;

                        if (nama.Length > 30)
                        {
                            nama = nama.Substring(0, 30);
                        }

                        int jumlah = listNotaJual[i].NotaJualDetil[j].Jumlah;
                        int harga = (int)listNotaJual[i].NotaJualDetil[j].Harga;
                        int subtotal = jumlah * harga;

                        file.Write(nama.PadRight(30, ' '));
                        file.Write(jumlah.ToString().PadRight(3, ' '));
                        file.Write(harga.ToString("0,###").PadLeft(7, ' '));
                        file.Write(subtotal.ToString("0,###").PadLeft(10, ' '));
                        file.WriteLine("");
                        grandTotal = grandTotal + jumlah * harga;
                    }
                    file.WriteLine("=".PadRight(50, '='));
                    file.WriteLine("TOTAL : " + grandTotal.ToString("0,###"));
                    file.WriteLine("=".PadRight(50, '='));
                    file.WriteLine("Terima Kasih Atas Kunjungan Anda");
                    file.WriteLine("");
                }
                file.Close();

                Cetak c = new Cetak(pNamaFile, "Courier New", 9, 10, 10, 10, 10);
                string s = c.CetakKePrinter("tulisan");

                if (s != "1")
                {
                    return s;
                }

                return "1";
            }
            else
            {
                return "error";
            }
        }
        catch (MySqlException e)
        {
            return e.Message;
        }
    }
    #endregion
}


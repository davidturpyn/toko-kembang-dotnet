using JualBeli_LIB;
using MySql.Data.MySqlClient;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Barang
{
    public Barang()
    {
        KodeBarang = "";
        Kategori = new Kategori();
    }

    public Barang(string kodeBarang, string nama, long hargaJual, int stok, string barcode, Kategori kategori)
    {
        KodeBarang = kodeBarang;
        Nama = nama;
        HargaJual = hargaJual;
        Stok = stok;
        Barcode = barcode;
        Kategori = kategori;
    }

	public virtual string KodeBarang
	{
		get;
		set;
	}

	public virtual string Nama
	{
		get;
		set;
	}

	public virtual long HargaJual
	{
		get;
		set;
	}

	public virtual int Stok
	{
		get;
		set;
	}

	public virtual string Barcode
	{
		get;
		set;
	}

	public virtual Kategori Kategori
	{
		get;
		set;
    }

    #region Methode
    public static string TambahBarang(Barang bar)
    {
        string sql = "insert into barang values ('" + bar.KodeBarang + "','" + bar.Barcode + "','" + bar.Nama + "'," + bar.HargaJual + "," + bar.Stok + ",'" + bar.Kategori.KodeKategori + "');";

        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". perintah sql : " + sql;
        }
    }

    public static string UbahBarang(Barang bar)
    {
        string sql = "update barang set Barcode='" + bar.Barcode + "', Nama='" + bar.Nama.Replace("'", "\\'") + "', HargaJual=" + bar.HargaJual + ", Stok=" + bar.Stok + ", KodeKategori='" + bar.Kategori.KodeKategori + "' where KodeBarang = '" + bar.KodeBarang + "';";

        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". perintah sql : " + sql;
        }
    }

    public static string HapusBarang(Barang bar)
    {
        string sql = "delete from barang where KodeBarang = '" + bar.KodeBarang + "';";

        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message + ". perintah sql : " + sql;
        }
    }

    public static string GenerateKode(string pKodeKategori, out string pHasilKode)
    {
        string sql = "select max(right(KodeBarang, 3)) from barang where KodeKategori = '" + pKodeKategori + "';";
        pHasilKode = "";

        try
        {
            MySqlDataReader hasildata = Koneksi.jalankanPerintahQuery(sql);

            if (hasildata.Read() == true)
            {
                if (hasildata.GetValue(0).ToString() != "")
                {
                    int kodeBaru = int.Parse(hasildata.GetValue(0).ToString()) + 1;

                    pHasilKode = pKodeKategori + kodeBaru.ToString().PadLeft(3, '0');
                }
                else
                {
                    pHasilKode = pKodeKategori + "001";
                }
            }

            return "1";
        }
        catch (Exception e)
        {
            return e.Message;
        }
    }

    public static string BacaData(string kriteria, string nilaiKriteria, List<Barang> listDataBarang)
    {
        string sql = "";

        if (kriteria == "")
        {
            sql = "select B.KodeBarang, B.Barcode, B.Nama, B.HargaJual, B.Stok, B.KodeKategori, K.Nama from barang B inner join Kategori K on B.KodeKategori = K.KodeKategori;";
        }
        else if (kriteria == "Terendah")
        {
            sql = "select B.KodeBarang,B.Barcode, B.Nama, B.HargaJual, B.Stok, K.Nama, K.KodeKategori from barang B inner join Kategori K on B.KodeKategori = K.KodeKategori where Stok <= 15;";
        }
        else
        {
            sql = "select B.KodeBarang, B.Barcode, B.Nama, B.HargaJual, B.Stok, B.KodeKategori, K.Nama from barang B inner join Kategori K on B.KodeKategori = K.KodeKategori where " + kriteria + " like '%" + nilaiKriteria + "%';";
        }


        try
        {
            MySqlDataReader hasil = Koneksi.jalankanPerintahQuery(sql);

            while (hasil.Read() == true)
            {
                Barang kt = new Barang();
                kt.KodeBarang = hasil.GetValue(0).ToString();
                kt.Barcode = hasil.GetValue(1).ToString();
                kt.Nama = hasil.GetValue(2).ToString();
                kt.HargaJual = long.Parse(hasil.GetValue(3).ToString());
                kt.Stok = int.Parse(hasil.GetValue(4).ToString());

                Kategori k = new Kategori(hasil.GetValue(5).ToString(), hasil.GetValue(6).ToString());
                kt.Kategori = k;

                listDataBarang.Add(kt);
            }

            return "1";
        }
        catch (MySqlException ex)
        {
            return ex.Message;
        }
    }

    public static string UbahStokTerbeli(string pKodeBarang, int pTerbeli)
    {
        string sql = "update barang set Stok = Stok + " + pTerbeli + " where KodeBarang = '" + pKodeBarang + "';";
        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (Exception ex)
        {
            return ex.Message;
        }
    }

    public static string UbahStokTerjual(string _KodeBarang, int _Terjual)
    {
        string sql = "update barang set Stok = Stok - " + _Terjual + " where KodeBarang = '" + _KodeBarang + "';";
        try
        {
            Koneksi.DML(sql);
            return "1";
        }
        catch (Exception ex)
        {
            return ex.Message;
        }
    }
    #endregion
}

